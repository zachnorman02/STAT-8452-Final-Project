---
title: "Final Project"
format: pdf
editor: visual
---

```{r setup, include=F}
library(tidyverse)
library(patchwork)
```


```{r, message=FALSE}
data = read_csv("Sleep_Analysis.csv")
dim(data)
names(data)
head(data)
```
There are a couple of rows that appear to be close-duplicates (only difference is sleep time: one is 2 hours (the only non-binned value), and the other is 2-3 hours (which includes the non-binned value)). In addition, they both have sleep duration values of 6.7575, a strange value-- which also equals the sample mean of the dataset. Therefore, I have decided to exclude these 2 rows in my analysis.

```{r}
colnames(data) = make.names(colnames(data))
data = data %>%
  mutate(
    physical.illness = if_else(physical.illness=='no',0,1),
    bluelight.filter = ifelse(bluelight.filter=='no',0,1),
    smoke.drink = ifelse(smoke.drink=='no',0,1),
    meals.day = case_when(
      meals.day=='one'~1,
      meals.day=='two'~2,
      meals.day=='three'~3,
      meals.day=='four'~4,
      meals.day=='five'~5,
      meals.day=='more than 5'~6,
      .default=0
    ),
    screen.time = case_when(
      screen.time=="2hrs"~2,
      screen.time=="3-4 hrs"~3.5,
      screen.time=="1-2 hrs"~1.5,
      screen.time=="2-3 hrs"~2.5,
      screen.time=="4-5 hrs"~4.5,
      screen.time=="more than 5"~5.5,
      screen.time=="0-1 hrs"~0.5,
      .default=0
    )
  )
```

```{r}
filter_data = function(df) {
  df %>% dplyr::filter(round(sleep.time,4) != 6.7575)
}
data_cleaned = filter_data(data)
data_cleaned
```

```{r}
plot_density = function(df, group, is_filtered) {
  title = paste0(
    "Density by ",
    str_to_title(group)
  )
  subtitle = ifelse(is_filtered, "Removing Non-Rounded Values", "Full Data")
  return(
    df %>% 
      ggplot() +
        geom_density(aes_string(x="sleep.time",color=group)) +
        labs(x="Sleep Duration", y="Density") +
        ggtitle(label=title, subtitle=subtitle)
  )
}

plot_and_test = function(df, group) {
  cleaned_df = filter_data(df)
  
  plots = list()
  plots$orig = plot_density(df, group, F)
  plots$clean = plot_density(cleaned_df, group, T)
  print(
    plots$orig + 
      plots$clean + 
      plot_layout(ncol = 2, nrow = 1)
  )
  
  formula_string = paste0("sleep.time~", group)
  formula = as.formula(formula_string)
  print("###Cleaned Data###")
  print(t.test(formula, data=cleaned_df))
  print(wilcox.test(formula, data=df))
  print("###Full Data###")
  print(t.test(formula, data=df))
  print(wilcox.test(formula, data=df))
}
```


# Mean Sleep Duration

```{r}
ggplot() +
  geom_density(data=data,aes(x=sleep.time, color="data")) +
  geom_density(data=data_cleaned,aes(x=sleep.time, color="data_cleaned"))
```

## Cleaned
```{r}
# parametric
med=median(data_cleaned$sleep.time)
t.test(data_cleaned$sleep.time, mu=med)

# non-parametric (sign test)
above = data_cleaned %>% 
  mutate(sign = sleep.time > med) %>% 
  filter(sign == 1) %>% 
  nrow()
binom.test(above,data_cleaned %>% nrow(),0.5)
```
# Non-cleaned
```{r}
# parametric
med=median(data$sleep.time)
t.test(data_cleaned$sleep.time, mu=med)

# non-parametric (sign test)
above = data %>% 
  mutate(sign = sleep.time > med) %>% 
  filter(sign == 1) %>% 
  nrow()
binom.test(above,data %>% nrow(),0.5)
```

# Compare male/female
```{r}
data_by_gender = data %>% 
  dplyr::filter(Gender %in% c("Male", "Female"))

plot_and_test(data_by_gender, "Gender")
```
## Direction of sleep
Data claims southwest is best. As we only have 4 directions, we will test for south/west vs north/east
```{r}
data_direction = data %>% 
  mutate(
    south_west=sleep.direction %in% c("south","west")
  )
data_direction

plot_and_test(data_direction, "south_west")
```

